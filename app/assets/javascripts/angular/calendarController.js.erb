app.controller('CalendarCtrl',
  function ($scope, $modal, workitemService) {

    // page is now ready, initialize the calendar...

    $(document).ready(function() {
		
		$('#calendar').fullCalendar({
			header: {
				left: 'prev,next today',
				center: 'title',
				right: ''
			},
			buttonText: {
				today: 'Today'
			},
			defaultDate: new Date(),
			editable: true,
			eventLimit: true,
			timeFormat: ''
		});

		workitemService.getWorkItems().then(function(workitems) {
			workitemService.getWorkEstimate().then(function(workEstimate) {
				$scope.totalTimeObj.totaltime = workEstimate.toFixed(2);
				var otherTime = 24 - workEstimate;
				var leisuretime = 0;
				var sleeptime = 7;

				if (otherTime < 0) {
					sleeptime = 0;
					leisuretime = 0;
				} else {
					if (otherTime > 7) {
						leisuretime = otherTime - 7;
					}
				}

				$scope.totalTimeObj.sleeptime = sleeptime.toFixed(2);
				$scope.totalTimeObj.leisuretime = leisuretime.toFixed(2);
				$scope.makeBar();
			});
			workitems = workitems.sort(function(a, b) {
				return new Date(a.due_date) - new Date(b.due_date);
			});
			workitems.forEach(function(workitem) {

				var task = {
					name: workitem.content,
					time: workitem.minutes_needed/ 60,
					completedTime: workitem.minutes_completed / 60,
					date: new Date(workitem.due_date),
					id: workitem.id
				};
				var calTask = { id: task.id, title: task.name, start: task.date, end: task.date};
				$('#calendar').fullCalendar('renderEvent', calTask, true);

				$scope.tasks.push(task);
			});

		});
		
	});

	

	$scope.tasks = [];

	$scope.totalTimeObj = {
		totaltime: 0,
		sleeptime: 7,
		leisuretime: 0
	};

	$scope.makeBar = function() {
		$(function () {
	    	$('#bar-container').highcharts({
		        chart: {
		            type: 'bar'
		        },
		        title: {
		            text: 'Life Chart'
		        },
		        xAxis: {
		            categories: ['']
		        },
		        yAxis: {
		            min: 0,
		            title: {
		                text: 'Time / hr'
		            },
		            max: 24
		        },
		        legend: {
		            reversed: true
		        },
		        plotOptions: {
		            series: {
		                stacking: 'normal'
		            }
		        },
		        series: [{
		            name: 'Work',
		            data: [parseFloat($scope.totalTimeObj.totaltime)]
		        }, {
		            name: 'Leisure',
		            data: [parseFloat($scope.totalTimeObj.leisuretime)]
		        }, {
		            name: 'Sleep',
		            data: [parseFloat($scope.totalTimeObj.sleeptime)]
		        }],
		        exporting: {
				    enabled: false
				}
		    });
		});
	};

	$scope.$watch('totalTimeObj.totaltime', function() {
	});

	$scope.createTask = function() {
		var modalInstance = $modal.open({
	      templateUrl: 'taskModal.html',
	      controller: 'TaskModalCtrl',
	      size: 'md',
	      resolve: {
	      	tasks: function() {
	      		return $scope.tasks;
	      	},
	      	task: function() {
	      		return {
	      			name: '',
	      			date: '',
	      			time: ''
	      		}
	      	},
	      	edit: function() {
	      		return false;
	      	},
	      	workitemService: function() {
	      		return workitemService;
	      	},
	      	totalTimeObj: function() {
	      		return $scope.totalTimeObj;
	      	},
	      	makeBar: function() {
	      		return $scope.makeBar;
	      	}
	      }
	    });
	};
	$scope.inspectTask = function(currentTask) {
		var modalInstance = $modal.open({
	      templateUrl: 'taskModal.html',
	      controller: 'TaskModalCtrl',
	      size: 'md',
	      resolve: {
	      	tasks: function() {
	      		return $scope.tasks;
	      	},
	      	task: function() {
	      		return currentTask;
	      	},
	      	edit: function() {
	      		return true;
	      	},
	      	workitemService: function() {
	      		return workitemService;
	      	},
	      	totalTimeObj: function() {
	      		return $scope.totalTimeObj;
	      	},
	      	makeBar: function() {
	      		return $scope.makeBar;
	      	}
	      }
	    });
	}

  });